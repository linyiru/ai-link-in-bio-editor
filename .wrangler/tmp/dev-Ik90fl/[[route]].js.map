{
  "version": 3,
  "sources": ["../../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../bundle-1fM2Cn/middleware-insertion-facade.js", "../../../functions/api/%5B%5Broute%5D%5D.ts"],
  "sourceRoot": "/Users/linyiru/Downloads/ai-link-in-bio-editor(linktree)/.wrangler/tmp/dev-Ik90fl",
  "sourcesContent": ["export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import { __facade_registerInternal__ } from \"/Users/linyiru/Downloads/ai-link-in-bio-editor(linktree)/node_modules/wrangler/templates/middleware/loader-sw.ts\";\nimport * as __MIDDLEWARE_0__ from \"/Users/linyiru/Downloads/ai-link-in-bio-editor(linktree)/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\n__facade_registerInternal__([__MIDDLEWARE_0__.default])", "import { D1Database, R2Bucket } from '@cloudflare/workers-types';\n\nexport interface Env {\n  DB: D1Database;\n  IMAGES: R2Bucket;\n  GEMINI_API_KEY: string;\n  R2_PUBLIC_URL?: string; // Optional R2 public URL base\n}\n\ninterface UserData {\n  profile: {\n    name: string;\n    bio: string;\n    imageUrl: string;\n  };\n  links: Array<{\n    id: string;\n    title: string;\n    url: string;\n    isActive: boolean;\n  }>;\n  themeSettings: {\n    isDarkMode: boolean;\n    colorPaletteId: string;\n    backgroundColorId: string;\n    backgroundPattern: string;\n    cardShadow: boolean;\n    borderRadius: string;\n    fontFamily: string;\n  };\n}\n\n// Helper function to generate a unique slug\nfunction generateSlug(): string {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    const url = new URL(request.url);\n    const pathSegments = url.pathname.split('/').filter(segment => segment !== '');\n    \n    // Remove 'api' from the path if present\n    if (pathSegments[0] === 'api') {\n      pathSegments.shift();\n    }\n    \n    const params = { route: pathSegments };\n    const context = { request, env, params };\n    \n    return handleRequest(context);\n  }\n};\n\nasync function handleRequest(context: { request: Request; env: Env; params: { route: string[] } }) {\n  const { request, env, params } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n\n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n\n  const route = params.route?.join('/') || '';\n  \n  try {\n    // GET /api/page/:slug - Get user data by slug\n    if (request.method === 'GET' && route.startsWith('page/')) {\n      const slug = route.split('/')[1];\n      \n      if (!slug) {\n        return new Response(JSON.stringify({ error: 'Slug is required' }), {\n          status: 400,\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Get user data\n      const userResult = await env.DB.prepare(`\n        SELECT id, name, bio, image_url, theme_settings \n        FROM users \n        WHERE user_slug = ?\n      `).bind(slug).first();\n\n      if (!userResult) {\n        return new Response(JSON.stringify({ error: 'Page not found' }), {\n          status: 404,\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Get user links\n      const linksResult = await env.DB.prepare(`\n        SELECT link_id, title, url, is_active\n        FROM links \n        WHERE user_id = ? \n        ORDER BY order_index ASC\n      `).bind(userResult.id).all();\n\n      const userData: UserData = {\n        profile: {\n          name: userResult.name as string,\n          bio: userResult.bio as string || '',\n          imageUrl: userResult.image_url as string || ''\n        },\n        links: linksResult.results.map((link: any) => ({\n          id: link.link_id,\n          title: link.title,\n          url: link.url,\n          isActive: Boolean(link.is_active)\n        })),\n        themeSettings: JSON.parse(userResult.theme_settings as string)\n      };\n\n      return new Response(JSON.stringify(userData), {\n        status: 200,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n      });\n    }\n\n    // POST /api/upload-image - Upload profile image to R2\n    if (request.method === 'POST' && route === 'upload-image') {\n      try {\n        const formData = await request.formData();\n        const file = formData.get('image') as File;\n        \n        if (!file) {\n          return new Response(JSON.stringify({ error: 'No image file provided' }), {\n            status: 400,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n          });\n        }\n\n        // Validate file type\n        if (!file.type.startsWith('image/')) {\n          return new Response(JSON.stringify({ error: 'File must be an image' }), {\n            status: 400,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n          });\n        }\n\n        // Validate file size (max 5MB for R2, 1MB for base64 fallback)\n        const maxSize = env.IMAGES ? 5 * 1024 * 1024 : 1024 * 1024;\n        if (file.size > maxSize) {\n          const maxSizeStr = env.IMAGES ? '5MB' : '1MB (local dev mode)';\n          return new Response(JSON.stringify({ error: `File size must be less than ${maxSizeStr}` }), {\n            status: 400,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n          });\n        }\n\n        let imageUrl: string;\n\n        // Check if R2 is available (production/remote mode)\n        if (env.IMAGES) {\n          // Generate unique filename\n          const fileExtension = file.name.split('.').pop() || 'jpg';\n          const filename = `profile-${Date.now()}-${Math.random().toString(36).substring(2)}.${fileExtension}`;\n          \n          // Upload to R2\n          const arrayBuffer = await file.arrayBuffer();\n          await env.IMAGES.put(filename, arrayBuffer, {\n            httpMetadata: {\n              contentType: file.type,\n            },\n          });\n\n          // Return the public URL\n          const baseUrl = env.R2_PUBLIC_URL || 'https://your-r2-bucket.r2.dev';\n          imageUrl = `${baseUrl}/${filename}`;\n        } else {\n          // Fallback for local development: return base64 data URL\n          console.log('R2 not available, using base64 fallback for local development');\n          const arrayBuffer = await file.arrayBuffer();\n          const base64 = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n          imageUrl = `data:${file.type};base64,${base64}`;\n        }\n        \n        return new Response(JSON.stringify({ \n          success: true, \n          imageUrl: imageUrl,\n          isLocal: !env.IMAGES\n        }), {\n          status: 200,\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n\n      } catch (error) {\n        console.error('Image upload error:', error);\n        return new Response(JSON.stringify({ \n          error: 'Failed to upload image',\n          details: error instanceof Error ? error.message : 'Unknown error'\n        }), {\n          status: 500,\n          headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n        });\n      }\n    }\n\n    // POST /api/save - Save/update user data\n    if (request.method === 'POST' && route === 'save') {\n      const userData: UserData & { slug?: string } = await request.json();\n      \n      let userSlug = userData.slug;\n      \n      // If no slug provided, generate a new one and create new user\n      if (!userSlug) {\n        userSlug = generateSlug();\n        \n        // Insert new user\n        const insertResult = await env.DB.prepare(`\n          INSERT INTO users (user_slug, name, bio, image_url, theme_settings, updated_at)\n          VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n        `).bind(\n          userSlug,\n          userData.profile.name,\n          userData.profile.bio,\n          userData.profile.imageUrl,\n          JSON.stringify(userData.themeSettings)\n        ).run();\n\n        const userId = insertResult.meta.last_row_id;\n\n        // Insert links\n        for (let i = 0; i < userData.links.length; i++) {\n          const link = userData.links[i];\n          await env.DB.prepare(`\n            INSERT INTO links (user_id, link_id, title, url, is_active, order_index)\n            VALUES (?, ?, ?, ?, ?, ?)\n          `).bind(\n            userId,\n            link.id,\n            link.title,\n            link.url,\n            link.isActive ? 1 : 0,\n            i\n          ).run();\n        }\n      } else {\n        // Update existing user\n        const userResult = await env.DB.prepare(`\n          SELECT id FROM users WHERE user_slug = ?\n        `).bind(userSlug).first();\n\n        if (!userResult) {\n          return new Response(JSON.stringify({ error: 'User not found' }), {\n            status: 404,\n            headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n          });\n        }\n\n        const userId = userResult.id;\n\n        // Update user\n        await env.DB.prepare(`\n          UPDATE users \n          SET name = ?, bio = ?, image_url = ?, theme_settings = ?, updated_at = CURRENT_TIMESTAMP\n          WHERE id = ?\n        `).bind(\n          userData.profile.name,\n          userData.profile.bio,\n          userData.profile.imageUrl,\n          JSON.stringify(userData.themeSettings),\n          userId\n        ).run();\n\n        // Delete existing links and insert new ones\n        await env.DB.prepare(`DELETE FROM links WHERE user_id = ?`).bind(userId).run();\n\n        for (let i = 0; i < userData.links.length; i++) {\n          const link = userData.links[i];\n          await env.DB.prepare(`\n            INSERT INTO links (user_id, link_id, title, url, is_active, order_index)\n            VALUES (?, ?, ?, ?, ?, ?)\n          `).bind(\n            userId,\n            link.id,\n            link.title,\n            link.url,\n            link.isActive ? 1 : 0,\n            i\n          ).run();\n        }\n      }\n\n      return new Response(JSON.stringify({ \n        success: true, \n        slug: userSlug,\n        url: `${url.origin}/#/page/${userSlug}`\n      }), {\n        status: 200,\n        headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n      });\n    }\n\n    // 404 for unknown routes\n    return new Response(JSON.stringify({ error: 'Not found' }), {\n      status: 404,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('API Error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      details: error instanceof Error ? error.message : 'Unknown error'\n    }), {\n      status: 500,\n      headers: { ...corsHeaders, 'Content-Type': 'application/json' }\n    });\n  }\n}"],
  "mappings": "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",
  "names": ["ctx"]
}
